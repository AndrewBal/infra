# generated with `helm install --dry-run --debug kuma`
# from a local checkout of https://github.com/mdn/helm-charts
# then modified for mdn-dev
#------------------------------------------------------------------------------
# Setup:
#   * pip install j2cli
#
# Deploy "web" service:
#   NOTE: j2 uses env variables to populate template
#   NOTE: in our Jenkins env, GIT_COMMIT_SHORT is populated automatically
#         (via setGitEnvironmentVariables())
#   * . mdn/k8s/virginia-env
#   * j2 mdn-dev.yaml.jinja | kubectl apply -n mdn-dev -f -
#------------------------------------------------------------------------------

---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: LoadBalancer
  selector:
    app: web
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mdn-shared-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mdn-dev
    #{{ NFS_PV_PATH }}
    server: {{ NFS_SERVER }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mdn-shared-pvc
spec:
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteMany
  volumeName: mdn-shared-pv
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      volumes:
        - name: mdn-shared-pv
          persistentVolumeClaim:
            claimName: mdn-shared-pvc
      containers:
        - name: web
          image: "quay.io/mozmar/kuma:{{ GIT_COMMIT_SHORT }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: mdn-shared-pv
          command:
            - "gunicorn"
          args:
            - "-w=4"
            - "--bind=0.0.0.0"
            - "--access-logfile=-"
            - "--timeout=120"
            - "--worker-class=meinheld.gmeinheld.MeinheldWorker"
            - "kuma.wsgi:application"
          ports:
            - containerPort: 8000
          env:
            # Django settings overrides:
            - name: ACCOUNT_DEFAULT_HTTP_PROTOCOL
              value: http
            - name: ALLOWED_HOSTS
              value: "*"
            - name: BROKER_URL
              value: redis://redis:6379/0
            - name: CELERY_ALWAYS_EAGER
              value: "False"
            - name: CSRF_COOKIE_SECURE
              value: "False"
            - name: MYSQL_ROOT_PASSWORD
              #TODO: consider using DATABASE_URL as secret instead
              valueFrom:
                secretKeyRef:
                  name: manageable-puffin-mysql
                  key: mysql-root-password
            - name: DATABASE_URL
              value: mysql://root:$(MYSQL_ROOT_PASSWORD)@{{ MYSQL_RELEASE }}-mysql:3306/developer_mozilla_org
            - name: DEBUG
              value: "False"
            - name: DEBUG_TOOLBAR
              value: "False"
            - name: DOMAIN
              value: web
            - name: ES_URLS
              value: elasticsearch:9200
            - name: KUMASCRIPT_URL_TEMPLATE
              value: http://kumascript:9080/docs/{path}
            - name: MEMCACHE_SERVERS
              value: {{ MEMCACHED_RELEASE }}-memcached:11211
            - name: PROD_DETAILS_DIR
              value: /app/product_details_json
            - name: PROTOCOL
              value: "http://"
            - name: SESSION_COOKIE_SECURE
              value: "False"
            - name: SITE_URL
              value: http://web
            # Other environment overrides
            - name: PYTHONDONTWRITEBYTECODE
              value: "1"
            - name: PYTHONUNBUFFERED
              value: "True"
            - name: WEB_CONCURRENCY
              value: "4"
            - name: MAINTENANCE_MODE
              value: "False"
          livenessProbe:
            httpGet:
              #TODO: better liveness path, perhaps /its-alive?
              path: /contribute.json
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 3
          readinessProbe:
            httpGet:
              #TODO: /healthz
              path: /en-US
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 3
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          #TODO: limits
